{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,YAAY,EAAE,kBAAkB,EAAe,MAAM,mBAAmB,CAAA;AAEhF,OAAO,qBAAqB,MAAM,yBAAyB,CAAA;AAE3D,MAAM,CAAC,KAAK,UAAU,iBAAiB,CACtC,GAAW,EACX,OAA+B,EAC/B,IAAY;IAEZ,OAAO,MAAM,qBAAqB,CAAC,iBAAiB,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,CAAA;AACzE,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,YAAY;IACjC,OAAO,MAAM,qBAAqB,CAAC,YAAY,EAAE,CAAA;AAClD,CAAC;AAED,MAAM,OAAO,GAAG,IAAI,YAAY,CAC/B,qBAAqB,IAAI,kBAAkB,CAAC,eAAe,CAC3D,CAAA;AAED,MAAM,UAAU,uBAAuB,CACtC,QAA8B;IAE9B,OAAO,OAAO,CAAC,WAAW,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAA;AACvD,CAAC","sourcesContent":["import {EventEmitter, NativeModulesProxy, Subscription} from 'expo-modules-core'\n\nimport ExpoAudioStreamModule from './ExpoAudioStreamModule'\n\nexport async function playStreamFromURL(\n\turl: string,\n\theaders: Record<string, string>,\n\tbody: string\n) {\n\treturn await ExpoAudioStreamModule.playStreamFromURL(url, headers, body)\n}\n\nexport async function stopPlayback() {\n\treturn await ExpoAudioStreamModule.stopPlayback()\n}\n\nconst emitter = new EventEmitter(\n\tExpoAudioStreamModule ?? NativeModulesProxy.ExpoAudioStream\n)\n\nexport function addStatusUpdateListener(\n\tlistener: (event: any) => void\n): Subscription {\n\treturn emitter.addListener('onStatusUpdate', listener)\n}\n"]}